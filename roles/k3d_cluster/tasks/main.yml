---
# dirs for bindmounts
- { include: dirs.yml, tags: [ 'dirs' ] }

# create a docker network for the cluster
- name: NETWORK | Create a bridge network for the cluster with the right MTU
  docker_network:
    name: "{{ k3d_cluster_name}}_net"
    driver: "bridge"
    driver_options:
      com.docker.network.driver.mtu: "{{ docker_network_mtu }}"

# clusterscript
- name: CLUSTER | Copy cluster creation script to host
  template:
    src: cluster-creator.sh.j2
    dest: "~/create_{{ k3d_cluster_name }}_cluster.sh"
    mode: 0755
  become: no
  tags:
    - 'clusterscript'

- name: CLUSTER | Create and Launch the cluster
  shell: "~/create_{{ k3d_cluster_name }}_cluster.sh"
  become: no
  tags:
    - 'createcluster'

- name: CLUSTER | Get the kubeconfig
  shell: "/usr/local/bin/k3d kubeconfig get {{ k3d_cluster_name }}"
  register: k3d_kubeconfig_get
  become: no
  tags:
    - 'kubeconfig'

- name: CLUSTER | Copy the kubeconfig locally
  copy:
    content: "{{ k3d_kubeconfig_get.stdout }}"
    dest: "{{ local_kubeconfig_path }}/kubeconfig-{{ k3d_cluster_name }}"
  delegate_to: localhost
  become: no
  tags:
    - 'kubeconfig'

- name: CLUSTER | Replace the kubeconfig API Server Address
  replace:
    dest: "{{ local_kubeconfig_path }}/kubeconfig-{{ k3d_cluster_name }}"
    regexp: "{{ k3d_api_host }}"
    replace: "{{ k3d_host_ip }}"
  delegate_to: localhost
  become: no
  tags:
    - 'kubeconfig'